protocol SPI(dir) dir {
  data(var(dir) byte),
  end(),
}

with Seq((_:#l|#h, _:#l|#h, _:#l|#h), dir)
def spi() = ^SPI(dir) {
  repeat dir <: 10 { val((#h, <: #l, <: #l)) }
  repeat {
    repeat #up 1..1000 {
      on data(byte) {
        for bit=byte {
          let b = bit[0=#l, 1=#h]
          val((#l, #l, <: b))
          repeat dir <: 4 { val((#l, #l, <: b)) }
          val((#l, #h, b))
          repeat dir <: 4 { val((#l, #h, <: b)) }
        }
      }
    }
    on end() {
      val((#h, <: #l, <: #l))
    }
    repeat dir <: 9 { val((#h, <: #l, <: #l)) }
  }
}

@test(#roundtrip)
with Seq((_:#l|#h, _:#l|#h, _:#l|#h), _) def test1() = {
  spi() | { data('01011101); data('11110000); end(); data('00001000); end() }
}
