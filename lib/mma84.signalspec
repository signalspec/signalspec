let ADDR_WR = 'h3a
let ADDR_RD = 'h3b

let OUT_X_MSB = 'h01
let XYZ_DATA_CFG = 'h0E
let WHO_AM_I = 'h0D
let CTRL_REG1 = 'h2A
let CTRL_REG4 = 'h2D

//let I2C = Starfish

protocol I2C() {
    start(byte),
    data(#r|#w, byte),
    stop(),
}

with I2C()
def read_reg(reg, val) {
    start(ADDR_WR); data(#w, reg); start(ADDR_RD); data(#r, val); stop()
}

with I2C()
def write_reg(reg, val) {
    start(ADDR_WR); data(#w, reg); data(#w, val); stop()
}

with I2C()
def mma84(): Seq(-4..4, -4..4, -4..4) {
    read_reg(WHO_AM_I, 'h2a);
    write_reg(CTRL_REG1, 'h31);
    write_reg(XYZ_DATA_CFG, 'h00);
    write_reg(CTRL_REG4, 'h01);
    repeat {
        on (x, y, z) {
            start(ADDR_WR);
            data(#w, OUT_X_MSB);
            start(ADDR_RD);

            for w = [x, y, z] {
                for b = chunks(#8, signed(#16, int(w * 16384))) { data(#r, b) }
            }

            stop()
        }
    }
}
