with Seq(_:0..10, dir)
def main() = ^Seq(0..10, dir) {
    on val(1) {}
    on val(2) {}
    on val(a) {
        val(a)
        val(<: a)
    }
}

@test(#both, (5, 5))
with Seq(_:0..10, _) def test1() = { main() | { val(1) ; val(2) ; val(5) } }

with Seq((_:0..10, _:0..10), dir)
def tuple() = ^Seq((0..10, 0..10), dir) {
    on val((a, b)) {
        val((a, b))
        val((<: a, <: b))
    }

    on val(x) {
        val(x)
    }
}

@test(#both, ((5, 6), (5, 6), (7, 8)))
with Seq((_:0..10, _:0..10), _) def test2() = { tuple() | { val((5, 6)); val((7, 8)) } }

