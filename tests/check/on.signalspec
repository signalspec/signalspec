with Seq(_:0..10, dir)
def main() = new Seq(0..10, dir) {
    on val(1) {}
    on val(2) {}
    on val(a) {
        val(a)
        val(<: a)
    }
}

@test(#both, (5, 5))
with Seq(_:0..10, _) def test1() = main() | seq { val(1) ; val(2) ; val(5) }

with Seq((_:0..10, _:0..10), dir)
def tuple() = new Seq((0..10, 0..10), dir) {
    on val((a, b)) {
        val((a, b))
        val((<: a, <: b))
    }

    on val(x) {
        val(x)
    }
}

@test(#both, ((5, 6), (5, 6), (7, 8)))
with Seq((_:0..10, _:0..10), _) def test2() = tuple() | seq { val((5, 6)); val((7, 8)) }

with Seq((_:#a|#b|#c, _:bits(2)), dir)
def test_vec() = new Seq(bits(3), dir) {
    repeat {
        alt #up _ {
            #a => {
                on val('111) {
                    val((#a, '00))
                }
            }

            #b => {
                on val([2:'10, x]) {
                    val((#b, [1, x]))
                }
            }

            #c => {
                on val([0, 2:x]) {
                    val((#c, x))
                }
            }
        }
    }
}

@test(#both, ((#b, '10), (#a, '00), (#b, '11), (#c, '01)))
with Seq((_:#a|#b|#c, _:bits(2)), dir) def on_vec() = test_vec() | seq { val('100); val('111); val('101); val('001) }

