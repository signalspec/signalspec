@test(#dn, ())
with Seq(_, _) def main() = new Seq(#x | #y, #dn) {
//# type error
    on val(#a) {}
//         ^^ `#a` does not match type `#x | #y`

//# type error
    on val(1) {}
//         ^ `1` does not match type `#x | #y`
}

@test(#dn, ())
with Seq(_, _) def main() = new Seq(bits(2), #dn) {
//# expected type `[0..1; 2]`
    on val([x]) {}
//         ^^^ can't destructure into vector of width 1

//# type error
//# type error
    on val([#a, #b])
//          ^^ `#a` does not match type `0..1`
//              ^^ `#b` does not match type `0..1`
}

@test(#up, ())
with Seq(_, _) def main() = new Seq(#x | #y, #up) {
//# type error
    on val(#a) {}
//         ^^ `#a` does not match type `#x | #y`

//# type error
    on val(1) {}
//         ^ `1` does not match type `#x | #y`
}

@test(#up, ())
with Seq(_, _) def main() = new Seq(bits(2), #up) {
//# expected type `[0..1; 2]`
    on val([x]) {}
//         ^^^ can't destructure into vector of width 1

//# type error
//# type error
    on val([#a, #b])
//          ^^ `#a` does not match type `0..1`
//              ^^ `#b` does not match type `0..1`
}

